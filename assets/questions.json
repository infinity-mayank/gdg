[
  {
    "question": "Which data structure is the most efficient for implementing a priority queue?",
    "A": "Stack",
    "B": "Queue",
    "C": "Heap",
    "D": "Linked List",
    "Answer": "C",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which of the following scheduling algorithms can cause starvation?",
    "A": "Round Robin",
    "B": "Shortest Job Next",
    "C": "First-Come-First-Served",
    "D": "Multilevel Queue",
    "Answer": "B",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which of the following HTTP methods is considered idempotent?",
    "A": "GET",
    "B": "POST",
    "C": "PATCH",
    "D": "CONNECT",
    "Answer": "A",
    "Language": "HTTP",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "What is the primary purpose of a firewall?",
    "A": "To detect malware",
    "B": "To block unauthorized access",
    "C": "To encrypt data",
    "D": "To manage network traffic",
    "Answer": "B",
    "Language": "Networking",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "Which data structure is used for implementing recursion?",
    "A": "Queue",
    "B": "Stack",
    "C": "Heap",
    "D": "Linked List",
    "Answer": "B",
    "Language": "General",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "Which algorithm design technique is used in the QuickSort algorithm?",
    "A": "Dynamic Programming",
    "B": "Divide and Conquer",
    "C": "Backtracking",
    "D": "Greedy Algorithm",
    "Answer": "B",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which layer of the OSI model is responsible for end-to-end communication and error recovery?",
    "A": "Transport Layer",
    "B": "Network Layer",
    "C": "Session Layer",
    "D": "Application Layer",
    "Answer": "A",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "In a binary search tree, the left child of a node contains:",
    "A": "A value smaller than the parent",
    "B": "A value greater than the parent",
    "C": "Any random value",
    "D": "The same value as the parent",
    "Answer": "A",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What does the term 'cache hit' refer to in computer architecture?",
    "A": "Accessing data from RAM instead of cache",
    "B": "Data found in the cache memory",
    "C": "Data not present in cache memory",
    "D": "Data fetched from secondary storage",
    "Answer": "B",
    "Language": "General",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "Which protocol provides a connection-oriented reliable byte stream service?",
    "A": "UDP",
    "B": "TCP",
    "C": "IP",
    "D": "ICMP",
    "Answer": "B",
    "Language": "General",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "In relational databases, a foreign key:",
    "A": "Always points to a primary key in another table.",
    "B": "Must be unique.",
    "C": "Cannot have NULL values.",
    "D": "Cannot have duplicate values.",
    "Answer": "A",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which of the following operations is the most efficient in a linked list compared to an array?",
    "A": "Random Access",
    "B": "Insertion at the beginning",
    "C": "Searching for an element",
    "D": "Accessing the middle element",
    "Answer": "B",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which CSS property is used to control the stacking order of elements?",
    "A": "position",
    "B": "z-index",
    "C": "display",
    "D": "float",
    "Answer": "B",
    "Language": "General",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "Which of the following is an example of runtime polymorphism?",
    "A": "Method overloading",
    "B": "Method overriding",
    "C": "Operator overloading",
    "D": "Function templates",
    "Answer": "B",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which concept in OOP allows the same operation to behave differently on different classes?",
    "A": "Abstraction",
    "B": "Inheritance",
    "C": "Polymorphism",
    "D": "Encapsulation",
    "Answer": "C",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which access specifier allows members of a class to be accessed only within the same class and its derived classes?",
    "A": "Public",
    "B": "Private",
    "C": "Protected",
    "D": "Internal",
    "Answer": "C",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which of the following problems can occur due to concurrent access to shared resources?",
    "A": "Deadlock",
    "B": "Starvation",
    "C": "Race condition",
    "D": "All of the above",
    "Answer": "D",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What does the term 'IP address' stand for in networking?",
    "A": "Internet Protocol address",
    "B": "Internet Port address",
    "C": "Internal Process address",
    "D": "Initial Point address",
    "Answer": "A",
    "Language": "General",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "Which of the following is true regarding multithreading?",
    "A": "Threads share the same memory space.",
    "B": "Each thread has its own memory space.",
    "C": "Multithreading improves CPU usage by using more memory.",
    "D": "Multithreading reduces CPU utilization.",
    "Answer": "A",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What is the time complexity of searching for an element in a binary search tree (BST)?",
    "A": "O(n)",
    "B": "O(log n)",
    "C": "O(n log n)",
    "D": "O(1)",
    "Answer": "B",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What is the worst-case time complexity of the QuickSort algorithm?",
    "A": "O(n log n)",
    "B": "O(n^2)",
    "C": "O(log n)",
    "D": "O(n)",
    "Answer": "B",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "In a circular linked list, what is the time complexity of inserting an element at the beginning of the list?",
    "A": "O(1)",
    "B": "O(n)",
    "C": "O(log n)",
    "D": "O(n^2)",
    "Answer": "A",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What is the main advantage of inheritance in OOP?",
    "A": "It allows an object to inherit properties from other objects",
    "B": "It allows the reusability of code",
    "C": "It allows the restriction of certain properties",
    "D": "It allows multiple inheritance",
    "Answer": "B",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which of the following is true about interfaces in OOP?",
    "A": "A class can implement multiple interfaces",
    "B": "An interface can implement methods of a class",
    "C": "Interfaces can have constructors",
    "D": "An interface cannot extend another interface",
    "Answer": "A",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which of the following does the 'D' in the ACID properties of a database stand for?",
    "A": "Data",
    "B": "Dependability",
    "C": "Durability",
    "D": "Dynamic",
    "Answer": "C",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What type of SQL JOIN returns only the rows that have matching values in both tables?",
    "A": "LEFT JOIN",
    "B": "RIGHT JOIN",
    "C": "INNER JOIN",
    "D": "FULL OUTER JOIN",
    "Answer": "C",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which of the following is true about a database transaction?",
    "A": "A transaction can be partially committed",
    "B": "A transaction is a sequence of one or more SQL operations that are executed as a single unit",
    "C": "A transaction can only be rolled back once",
    "D": "Transactions are not atomic",
    "Answer": "B",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What is the purpose of indexing in a database?",
    "A": "To improve query performance by providing faster access to data",
    "B": "To store more data in less space",
    "C": "To prevent data duplication",
    "D": "To automatically update the database",
    "Answer": "A",
    "Language": "General",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "In a compiler, keywords of a language are recognized during:",
    "A": "Parsing of the program",
    "B": "The code generation",
    "C": "The lexical analysis of the program",
    "D": "Dataflow analysis",
    "Answer": "C",
    "Language": "General",
    "Level": "Advanced",
    "Code": ""
  },
  {
    "question": "Which data structure in a compiler is used for managing information about variables and their attributes?",
    "A": "Abstract syntax tree",
    "B": "Symbol table",
    "C": "Semantic stack",
    "D": "Parse table",
    "Answer": "B",
    "Language": "General",
    "Level": "Advanced",
    "Code": ""
  },
  {
    "question": "What is the output of the following code?",
    "A": "Error",
    "B": "undefined",
    "C": "number",
    "D": "string",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": "console.log(typeof 42);"
  },
  {
    "question": "Which of the following is NOT a JavaScript data type?",
    "A": "String",
    "B": "Boolean",
    "C": "Integer",
    "D": "Object",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "Which symbol is used for single-line comments in JavaScript?",
    "A": "//",
    "B": "/* */",
    "C": "#",
    "D": "<!-- -->",
    "Answer": "A",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "What is the result of '3' + 2 in JavaScript?",
    "A": "5",
    "B": "32",
    "C": "Error",
    "D": "undefined",
    "Answer": "B",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "What is the correct syntax for creating a function in JavaScript?",
    "A": "function = myFunction() {}",
    "B": "function myFunction() {}",
    "C": "func myFunction() {}",
    "D": "create function myFunction() {}",
    "Answer": "B",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "How do you declare a variable in JavaScript?",
    "A": "var myVar;",
    "B": "let myVar;",
    "C": "const myVar;",
    "D": "All of the above",
    "Answer": "D",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "What is the output of the following code?",
    "A": "true",
    "B": "false",
    "C": "Error",
    "D": "undefined",
    "Answer": "A",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": "console.log(Boolean(1));"
  },
  {
    "question": "What does the isNaN() function do in JavaScript?",
    "A": "Checks if a number is NaN",
    "B": "Converts NaN to a number",
    "C": "Returns true if the value is not a number",
    "D": "Throws an error for invalid numbers",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": ""
  },
  {
    "question": "What is the output of the following code?",
    "A": "undefined",
    "B": "true",
    "C": "false",
    "D": "Error",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": "console.log(0 === '0');"
  },
  {
    "question": "Which of the following is a valid JavaScript array?",
    "A": "var arr = (1, 2, 3);",
    "B": "var arr = [1, 2, 3];",
    "C": "var arr = {1, 2, 3};",
    "D": "var arr = 1, 2, 3;",
    "Answer": "B",
    "Language": "Javascript",
    "Level": "Beginner",
    "Code": ""
  },

  {
    "question": "What is the output of the following code?",
    "A": "ReferenceError",
    "B": "undefined",
    "C": "5",
    "D": "null",
    "Answer": "B",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": "console.log(myVar); var myVar = 5;"
  },
  {
    "question": "Which of the following methods is used to add an element to the end of an array?",
    "A": "push()",
    "B": "pop()",
    "C": "shift()",
    "D": "unshift()",
    "Answer": "A",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What is the result of the following code?",
    "A": "Error",
    "B": "Infinity",
    "C": "NaN",
    "D": "1",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": "console.log(0 / 0);"
  },
  {
    "question": "How do you call a function named 'myFunction' in JavaScript?",
    "A": "call myFunction();",
    "B": "myFunction();",
    "C": "run myFunction();",
    "D": "execute myFunction();",
    "Answer": "B",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What is the output of the following code?",
    "A": "undefined",
    "B": "null",
    "C": "ReferenceError",
    "D": "10",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": "console.log(x); let x = 10;"
  },
  {
    "question": "What does the '===' operator do in JavaScript?",
    "A": "Compares values only",
    "B": "Compares types only",
    "C": "Compares both value and type",
    "D": "Performs type conversion then compares",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which JavaScript method is used to convert a JSON object into a string?",
    "A": "JSON.parse()",
    "B": "JSON.stringify()",
    "C": "JSON.toString()",
    "D": "JSON.convert()",
    "Answer": "B",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "Which keyword is used to define a constant variable in JavaScript?",
    "A": "let",
    "B": "var",
    "C": "const",
    "D": "final",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What will be the output of the following code?",
    "A": "true",
    "B": "false",
    "C": "TypeError",
    "D": "ReferenceError",
    "Answer": "B",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": "console.log([] == false);"
  },
  {
    "question": "What is the purpose of the 'map()' method in JavaScript?",
    "A": "To find an element in an array",
    "B": "To filter elements in an array",
    "C": "To create a new array by transforming elements",
    "D": "To combine elements into a single value",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Intermediate",
    "Code": ""
  },
  {
    "question": "What is the purpose of the finally block in JavaScript?",
    "A": "It executes only if an error occurs",
    "B": "It executes only if no error occurs",
    "C": "It always executes after try and catch blocks",
    "D": "It is used to define catch variables",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Advanced",
    "Code": ""
  },
  {
    "question": "What is the output of the following code?",
    "A": "undefined",
    "B": "ReferenceError",
    "C": "10",
    "D": "20",
    "Answer": "B",
    "Language": "Javascript",
    "Level": "Advanced",
    "Code": "let x = 10; if (true) { let x = 20; } console.log(x);"
  },
  {
    "question": "How can you deep clone an object in JavaScript?",
    "A": "Using JSON.stringify() and JSON.parse()",
    "B": "Using Object.assign()",
    "C": "Using the spread operator",
    "D": "None of the above",
    "Answer": "A",
    "Language": "Javascript",
    "Level": "Advanced",
    "Code": ""
  },
  {
    "question": "What is the output of the following code?",
    "A": "2",
    "B": "4",
    "C": "6",
    "D": "8",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Advanced",
    "Code": "function sum(a, b = 3) { return a + b; } console.log(sum(3));"
  },
  {
    "question": "What is the output of the following code?",
    "A": "5",
    "B": "10",
    "C": "15",
    "D": "ReferenceError",
    "Answer": "C",
    "Language": "Javascript",
    "Level": "Advanced",
    "Code": "const add = (x) => (y) => x + y; console.log(add(5)(10));"
  },


  {
    "question": "What is the output of this code?",
    "A": "It will not compile because of line 4.",
    "B": "It will not compile because of line 3.",
    "C": "123",
    "D": "1234",
    "Answer": "A",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "class Main {\n  public static void main (String[] args) {\n    int array[] = {1, 2, 3, 4};\n    for (int i = 0; i < array.size(); i++) {\n       System.out.print(array[i]);\n    }\n  }\n}"
  },
  {
    "question": "What does the following code print?",
    "A": "CD",
    "B": "CDE",
    "C": "D",
    "D": "abcde",
    "Answer": "D",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "String str = \"abcde\";\nstr.trim();\nstr.toUpperCase();\nstr.substring(3, 4);\nSystem.out.println(str);"
  },
  {
    "question": "What is the result of this code?",
    "A": "It will show a stack trace with a runtime exception.",
    "B": "java.lang.Exception",
    "C": "It will run and throw an exception.",
    "D": "It will not compile.",
    "Answer": "B",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "class Main {\n    public static void main (String[] args){\n        System.out.println(print(1));\n    }\n    static Exception print(int i){\n        if (i>0) {\n            return new Exception();\n        } else {\n            throw new RuntimeException();\n        }\n    }\n}"
  },
  {
    "question": "What is the output of the following code?",
    "A": "-127",
    "B": "127",
    "C": "129",
    "D": "2",
    "Answer": "A",
    "Language": "Java",
    "Level": "Intermediate",
    "FIELD9": "Range of byte data in java is -128 to 127. But the byte data type in java is cyclic in nature",
    "Code": "public class Foo{\n       public static void main(String[] args){\n                     byte question = 127;\n                     question++;\n                     question++;\n                     System.out.print(question);\n       }\n}"
  },
  {
    "question": "Given this code, which command will output \"2\"?",
    "A": "java Main 1 2 \"3 4\" 5",
    "B": "java Main 1 \"2\" \"2\" 5",
    "C": "java Main.class 1 \"2\" 2 5",
    "D": "java Main 1 \"2\" \"3 4\" 5",
    "Answer": "B",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "class Main {\n    public static void main(String[] args) {\n        System.out.println(args[2]);\n    }\n}"
  },
  {
    "question": "Which code snippet is valid?",
    "A": "ArrayList<String> words = new ArrayList<String>(){\"Hello\", \"World\"};\n",
    "B": "ArrayList words = Arrays.asList(\"Hello\", \"World\");",
    "C": "ArrayList<String> words = {\"Hello\", \"World\"};",
    "D": "ArrayList<String> words = new ArrayList<>(Arrays.asList(\"Hello\", \"World\"));",
    "Answer": "D",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": null
  },
  {
    "question": "What is the output of this code?",
    "A": "It will not compile.",
    "B": "\"Hello World!\"",
    "C": "\"hello\"",
    "D": "???? The code effectively converts the initial \"hello\" into \"HelloWorld!\" by deleting the first character, inserting \"H\" at the beginning, and appending \" World!\" to the end.",
    "Answer": "B",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "class Main {\n  public static void main(String[] args) {\n    StringBuilder sb = new StringBuilder(\"hello\");\n    sb.deleteCharAt(0).insert(0, \"H\").append(\" World!\");\n    System.out.println(sb);\n  }\n}"
  },
  {
    "question": "What is the output of the following code?",
    "A": "abc",
    "B": "bc",
    "C": "bcd",
    "D": "cd",
    "Answer": "B",
    "Language": "Java",
    "Level": "Beginner",
    "Code": "String str = “abcde”;\nSystem.out.println(str.substring(1, 3));"
  },
  {
    "question": "What is the output of the following code?",
    "A": "2",
    "B": "3",
    "C": "4",
    "D": "1",
    "Answer": "B",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "String a = new String(“gdgpune23”);\nString b = new String(“gdgpune23”);\nStrinc c = “gdgpune23”;\nString d = “gdgpune23”;"
  },
  {
    "question": null,
    "A": "1 3 2 4",
    "B": "4 2 3 1",
    "C": "1 2 3 4",
    "D": "4 3 2 1",
    "Answer": "C",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "import java.util.*;\npublic class Main {\n    public static void main(String[] args)\n    {\n        PriorityQueue<Integer> queue = new PriorityQueue<>();\n        queue.add(4);\n        queue.add(3);\n        queue.add(2);\n        queue.add(1);\n        while (queue.isEmpty() == false) {\n            System.out.printf(\"%d\", queue.remove());\n        }\n    }\n}"
  },
  {
    "question": "Which class can compile given these declarations?\ninterface One {\n    default void method() {\n        System.out.println(\"One\");\n    }\n}\n\ninterface Two {\n    default void method () {\n        System.out.println(\"One\");\n    }\n}",
    "A": "class Three implements One, Two {\n\t    public void method() {\n\t        super.One.method();\n\t    }\n\t}",
    "B": "class Three implements One, Two {\n\t    public void method() {\n\t        One.method();\n\t    }\n\t}",
    "C": "class Three implements One, Two {\n\t}",
    "D": "class Three implements One, Two {\n\t    public void method() {\n\t        One.super.method();\n\t    }\n\t}",
    "Answer": "D",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": null
  },
  {
    "question": "What is the output of the following code?",
    "A": "The code does not compile.",
    "B": "truefalse",
    "C": "truetrue",
    "D": "falsetrue",
    "Answer": "C",
    "Language": "Java",
    "Level": "Beginner",
    "Code": "class Main {\n    public static void main (String[] args) {\n        List list = new ArrayList();\n        list.add(\"hello\");\n        list.add(2);\n        System.out.print(list.get(0) instanceof Object);\n        System.out.print(list.get(1) instanceof Integer);\n    }\n}"
  },
  {
    "question": "What is the output of the following code?",
    "A": "It will not compile because of message() in main class.",
    "B": "\"Hello!\"",
    "C": "It will not compile because of message() in base class.",
    "D": "\"World!\"",
    "Answer": "A",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "class MainClass {\n    final String message() {\n        return \"Hello!\";\n    }\n}\nclass Main equestiontends MainClass {\n    public static void main(String[] args) {\n        System.out.println(message());\n    }\n  String message() {\n     return \"World!\";\n     }}"
  },
  {
    "question": "Given this code, which command will output?",
    "A": "java Main 1 2 \"3 4\" 5",
    "B": "java Main 1 \"2\" \"2\" 5",
    "C": "java Main.class 1 \"2\" 2 5",
    "D": "java Main 1 \"2\" \"3 4\" 5",
    "Answer": "B",
    "Language": "Java",
    "Level": "Beginner",
    "Code": "class Main {\n    public static void main(String[] args) {\n        System.out.println(args[2]);\n    }\n}"
  },
  {
    "question": "What is the output of the following code?",
    "A": "\"123451234512345\"",
    "B": "Nothing - this will not compile.",
    "C": "a negative integer value",
    "D": "\"12345100000\"",
    "Answer": "B",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "class Main {\n    public static void main(String[] args){\n        int a = 123451234512345;\n        System.out.println(a);\n    }}"
  },
  {
    "question": "This code does not compile. What needs to be changed so that it does?",
    "A": "Add a constructor that accepts a String parameter and assigns it to the field shortCode.",
    "B": "Remove the final keyword for the field shortCode.",
    "C": "All enums need to be defined on a single line of code.",
    "D": "Add a setter method for the field shortCode.",
    "Answer": "A",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "public enum Direction {\n    EAST(\"E\"),\n    WEST(\"W\"),\n    NORTH(\"N\"),\n    SOUTH(\"S\");\n\n    private final String shortCode;\n\n    public String getShortCode() {\n        return shortCode;\n    }\n}"
  },
  {
    "question": "Output of the code?",
    "A": "Nothing",
    "B": "Error",
    "C": "true",
    "D": "false",
    "Answer": "B",
    "Language": "Java",
    "Level": "Intermediate",
    "Code": "public class A { \n    public static void main(String[] args) \n    { \n        if (true) \n            break; \n    } \n} "
  },
  {
    "question": "What will happen when you try to build and run this code snippet?",
    "A": "A syntax error occurs due to the line SpecialFunction()().",
    "B": "The message \"An Error occurred\" is displayed.",
    "C": "The message \"Invoked from an instance.\" is displayed. // the second \"()\" is equals to .invoke()\n",
    "D": "A compile error occurs. You cannot override the invoke() method.",
    "Answer": "C",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": "class SpecialFunction : () -> Unit {\n  override fun invoke() {\n    println(\"Invoked from an instance.\")\n  }\n}\nfun main() {\n  try { SpecialFunction()() }\n  catch (ex: Exception) { println(\"An error occurred\") }\n}"
  },
  {
    "question": "Which line converts the binaryStr, which contains only 0s and 1s, to an integer representing its decimal value?",
    "A": "val myInt = toInt(binaryStr)",
    "B": "val myInt = binaryStr.toInt(\"0b\")",
    "C": "val myInt = binaryStr.toInt()",
    "D": "val myInt = binaryStr.toInt(2)",
    "Answer": "D",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": "val binaryStr = \"00001111\"\n"
  },
  {
    "question": "How to tell the compiler that the method is a static method and can be used in Java code?",
    "A": "@JvmField",
    "B": "@JvmOverloads",
    "C": "@JvmStatic",
    "D": "All of the above",
    "Answer": "C",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": null
  },
  {
    "question": "You have written a function, sort(), that should accept only collections that implement the Comparable interface. How can you restrict the function?",
    "A": "Add <T -> Comparable<T>> between the fun keyword and the function name",
    "B": "Add Comparable<T> between the fun keyword and the function name",
    "C": "Add <T : Comparable<T>> between the fun keyword and the function name",
    "D": "Add <T where Comparable<T>> between the fun keyword and the function name",
    "Answer": "C",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": "fun sort(list: List<T>): List <T> {\n    return list.sorted()\n}"
  },
  {
    "question": "Which line of code shows how to create a finite sequence of the numbers 1 to 99 and then convert it into a list?",
    "A": "val lessThan99 = generateSequence(1){ if (it < 99) it + 1 else null }.toList().",
    "B": "val lessThan99 = generateSequence(0){ if (it < 99)}.toList().",
    "C": "val lessThan99 = generateSequence(1..9){ if (it < 99) it + 1 else null }.toList().",
    "D": "val lessThan99 = listOf{1..99}.asSequence().toList()\n",
    "Answer": "A",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": null
  },
  {
    "question": "What is the output of this code?",
    "A": "The length of the quote is The eagle has landed.",
    "B": "A compilation error is displayed.",
    "C": "The length of the quote is 21",
    "D": "The length of the quote is The eagle has landed..length",
    "Answer": "D",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": "val quote = \"The eagle has landed.\"\nprintln(\"The length of the quote is $quote.length\")"
  },
  {
    "question": "You have an unordered list of high scores. Which is the simple method to sort the highScores in descending order?",
    "A": ".sortedByDescending()",
    "B": ".descending()",
    "C": ".sortedDescending()",
    "D": ".sort(\"DESC\")",
    "Answer": "C",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": "fun main() {\n    val highScores = listOf(4000, 2000, 10200, 12000, 9030)"
  },
  {
    "question": "How to check if a lateinit variable has been initialized or not: lateinit var name: String ?",
    "A": "this::name != null",
    "B": "this::name.isInitialized()",
    "C": "this::name.isInitialized",
    "D": "this::name.length > 0",
    "Answer": "C",
    "Language": "Kotlin",
    "Level": "Beginner",
    "Code": null
  },
  {
    "question": "What are the ways through which we can create kotlin coroutines?",
    "A": "launch{} & async{}",
    "B": "await() & async{}",
    "C": "Both a and B",
    "D": "Non of the above.",
    "Answer": "A",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": null
  },
  {
    "question": "Which line of code shows how to call a Fibonacci function, bypass the first three elements, grab the next six, and sort the elements in descending order?",
    "A": "val sorted = fibonacci().skip(3).take(6).sortedDescending().toList()",
    "B": "val sorted = fibonacci().skip(3).take(6).sortedByDescending().toList()",
    "C": "val sorted = fibonacci().skip(3).limit(6).sortedByDescending().toList()",
    "D": "val sorted = fibonacci().drop(3).take(6).sortedDescending().toList()",
    "Answer": "D",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": null
  },
  {
    "question": "You have two arrays, a and b. Which line combines a and b as a list containing the contents of both?",
    "A": "val c = list of (a, b)",
    "B": "val c = a + b",
    "C": "val c = listOf(a+b)",
    "D": "val c = listOf(*a, *b)",
    "Answer": "D",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": "val a = arrayOf(1, 2, 3)\nval b = arrayOf(100, 200, 3000)"
  },
  {
    "question": "This code occasionally throws a null pointer exception (NPE). How can you change the code so it never throws as NPE?",
    "A": "Replace !!. with ?.",
    "B": "Replace !!. with ?:.",
    "C": "Surround the line with a try/catch block.",
    "D": "Replace !!. with ?.let",
    "Answer": "A",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": "println(\"length of First Name = ${firstName!!.length}\")"
  },
  {
    "question": "Which line of code is a shorter, more idiomatic version of the displayed snippet?\nval len: Int = if (question != null) question.length else -1",
    "A": "val len = question?.let{question.len} else {-1}",
    "B": "val len = question!!.length ?: -1",
    "C": "val len:Int = (question != null)? question.length : -1",
    "D": "val len = question?.length ?: -1",
    "Answer": "D",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": null
  },
  {
    "question": "Display even numbers from 1 to 10 with least amount of code in below for loop?\nfor (_____) {\n  println(\"There are $count employees.\")\n}",
    "A": "count in 1..10",
    "B": "count in 2..10 step 2",
    "C": "count in 1..10 % 2",
    "D": "var count=2; count <= 10; count+=2",
    "Answer": "B",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": null
  },
  {
    "question": "You have started a long-running coroutine whose job you have assigned to a variable named task. How could you abort this coroutine?\nval task = launch {\n  // long running job\n}",
    "A": "task.join()",
    "B": "task.abort()",
    "C": "task.stop()",
    "D": "task.cancel()",
    "Answer": "D",
    "Language": "Kotlin",
    "Level": "Intermediate",
    "Code": null
  }
]


'use client'
import {useState} from "react";
import data from '../../assets/questions.json';
import Quiz from './quiz';

const TechnogiseLogo = () => <svg width="236" height="80" viewBox="0 0 236 80" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M40.3377 11.0326C24.3001 11.0326 11.2886 24.0442 11.2886 40.0817C11.2886 56.1192 24.3001 69.1308 40.3377 69.1308C56.3752 69.1308 69.3867 56.1192 69.3867 40.0817C69.3867 24.0442 56.3752 11.0326 40.3377 11.0326ZM50.8586 32.8194C50.8586 32.8892 50.8354 32.9591 50.8121 33.0289C50.7423 33.2151 50.6026 33.378 50.4629 33.5177C50.1603 33.8436 49.8578 34.1462 49.5086 34.4255C49.1595 34.7048 48.787 34.9608 48.4146 35.2169C47.2741 35.985 45.9473 36.1945 44.574 36.1945C43.0145 36.1712 41.4549 36.1945 39.8954 36.1945C39.6859 36.1945 39.5928 36.2411 39.5463 36.4505C39.0109 38.3127 38.4988 40.2213 38.1729 42.1533C37.8704 43.899 37.7074 46.7853 37.8703 48.5543C37.9867 49.6716 38.2428 50.7656 38.8247 51.7432C39.4997 52.8605 40.873 53.8381 42.2463 53.6053C43.8059 53.3493 44.5973 51.557 44.9464 50.207C44.993 49.9975 45.1093 49.9276 45.3188 49.9276C46.762 49.9276 46.5758 52.1855 46.3896 53.0933C46.2964 53.5355 46.1568 53.9778 45.9473 54.3735C45.6447 54.9321 45.2723 55.4675 44.83 55.9097C44.0386 56.7011 43.0145 57.2597 41.8506 57.4692C40.0583 57.8184 38.3359 57.6089 36.7996 56.6313C35.7056 55.9097 35.0772 54.839 34.7047 53.6286C34.1461 51.7432 34.3556 48.7405 34.7047 46.8551C35.0772 44.8534 36.2875 37.9868 36.3807 37.4282C36.4039 37.2187 36.5203 36.7066 36.5203 36.6368C36.5203 36.5902 36.5436 36.5437 36.5436 36.4971C36.5436 36.4505 36.5669 36.404 36.5436 36.3574C36.5436 36.3342 36.5203 36.3109 36.5203 36.2876C36.497 36.2643 36.4505 36.2643 36.4272 36.2411C36.3807 36.2411 36.3341 36.2411 36.3108 36.2411C34.472 36.2411 32.6099 35.985 30.9107 36.8695C30.1193 37.2885 29.3977 37.8471 28.7925 38.4989C28.3735 38.9411 28.0244 39.4299 27.652 39.8955C27.3494 40.2912 27.0002 40.8265 26.4881 40.9895C25.6967 41.2455 25.0915 40.6403 25.0915 39.8722C25.0915 39.4532 25.1847 39.011 25.3243 38.6153C26.4881 35.6359 29.0718 33.3315 32.1211 32.3772C33.2383 32.028 34.4487 31.9116 35.6125 31.9116C39.4066 31.9116 48.6241 31.8651 49.4388 31.9349C49.9741 31.9582 50.9518 32.0746 50.8586 32.8194Z" fill="white"/>
<path d="M50.8354 28.9091C52.7508 28.9091 54.3036 27.3563 54.3036 25.4409C54.3036 23.5254 52.7508 21.9727 50.8354 21.9727C48.92 21.9727 47.3672 23.5254 47.3672 25.4409C47.3672 27.3563 48.92 28.9091 50.8354 28.9091Z" fill="black"/>
<path d="M88.7302 49.1825C87.6595 49.9739 86.1698 50.3929 84.7499 50.3929C81.561 50.3929 80.0248 48.3911 80.0248 44.8996V38.1727H77.5342V35.6588H80.048V30.5613H82.9576V35.6588H87.9155V38.1727H82.9576V44.9694C82.9576 46.7152 83.5628 47.7161 85.1689 47.7161C86.0999 47.7161 86.9379 47.3669 87.706 46.9247L88.7302 49.1825Z" fill="white"/>
<path d="M103.953 43.9688H92.7108C93.1065 46.0172 94.5264 47.7396 97.4825 47.7396C99.1352 47.7396 101.09 47.0879 102.371 46.1801L103.604 48.3448C102.301 49.369 99.9731 50.3466 97.3894 50.3466C91.966 50.3466 89.6616 46.5758 89.6616 42.7817C89.6616 38.4989 92.5945 35.2634 97.017 35.2634C101.044 35.2634 104.07 37.9635 104.07 42.5257C104.07 43.1309 104 43.5731 103.953 43.9688ZM92.7108 41.5714H101.09C100.858 39.267 99.1584 37.8238 96.9937 37.8238C94.7592 37.8238 93.1298 39.3368 92.7108 41.5714Z" fill="white"/>
<path d="M106.095 42.8516C106.095 38.4523 109.284 35.2867 113.823 35.2867C116.686 35.2867 119.293 36.7299 120.456 39.1274L118.036 40.5007C117.151 39.011 115.638 37.9868 113.869 37.9868C111.122 37.9868 109.097 40.105 109.097 42.8516C109.097 45.5517 111.076 47.6698 113.776 47.6698C115.475 47.6698 117.221 46.6224 117.966 45.2025L120.387 46.6224C119.223 48.8569 116.616 50.3699 113.729 50.3699C109.237 50.3466 106.095 47.2043 106.095 42.8516Z" fill="white"/>
<path d="M122.97 29.793H125.833V37.4509C126.671 36.194 128.323 35.2629 130.395 35.2629C133.328 35.2629 136.028 37.1949 136.028 41.2683V50.0203H133.095V42.083C133.095 39.3596 131.652 37.963 129.65 37.963C127.439 37.963 125.903 39.6389 125.903 42.1062V50.0203H122.97V29.793Z" fill="white"/>
<path d="M139.659 35.6359H142.545V37.6609C143.383 36.1945 145.036 35.2634 147.107 35.2634C150.04 35.2634 152.763 37.1954 152.763 41.2688V50.0207H149.807V42.0834C149.807 39.3834 148.364 37.9635 146.362 37.9635C144.151 37.9635 142.592 39.6627 142.592 42.13V50.0207H139.659V35.6359Z" fill="white"/>
<path d="M155.533 42.8283C155.533 38.6851 158.652 35.2634 163.145 35.2634C167.637 35.2634 170.756 38.6851 170.756 42.8283C170.756 47.0181 167.637 50.4164 163.145 50.4164C158.652 50.4164 155.533 47.0181 155.533 42.8283ZM167.8 42.8283C167.8 40.2213 165.775 37.9868 163.145 37.9868C160.538 37.9868 158.489 40.198 158.489 42.8283C158.489 45.5051 160.514 47.6698 163.145 47.6698C165.775 47.6465 167.8 45.4818 167.8 42.8283Z" fill="white"/>
<path d="M187.795 35.6359V48.5776C187.795 53.2795 184.652 56.1658 179.997 56.1658C177.483 56.1658 175.225 55.3045 173.55 54.1174L174.83 51.8363C176.11 52.7441 178.019 53.5355 179.927 53.5355C183.046 53.5355 184.862 51.5803 184.862 48.9733V47.9259C183.721 49.2294 182.115 50.0673 180.02 50.0673C175.854 50.0673 172.805 46.8784 172.805 42.6654C172.805 38.3825 176.063 35.2867 180.16 35.2867C182.208 35.2867 183.791 36.1712 184.932 37.4747V35.6359H187.795ZM185.048 42.6887C185.048 39.9653 183.093 37.9635 180.416 37.9635C177.763 37.9635 175.831 39.9653 175.831 42.6887C175.831 45.412 177.786 47.4371 180.416 47.4371C183.093 47.4371 185.048 45.3887 185.048 42.6887Z" fill="white"/>
<path d="M191.124 31.7255C191.124 30.6082 192.009 29.7703 193.126 29.7703C194.243 29.7703 195.104 30.6082 195.104 31.7255C195.104 32.866 194.243 33.7273 193.126 33.7273C192.009 33.7273 191.124 32.8893 191.124 31.7255ZM191.636 50.0441V35.6359H194.569V50.0441H191.636Z" fill="white"/>
<path d="M197.105 47.3675L198.991 45.6683C199.922 47.1347 201.365 47.8563 202.669 47.8563C204.112 47.8563 205.043 47.0184 205.043 46.064C205.043 45.2959 204.554 44.7838 203.809 44.4114C202.948 43.9924 201.132 43.3407 200.248 42.8519C198.665 42.0139 197.943 40.7104 197.943 39.2906C197.943 36.9396 199.829 35.1473 202.855 35.1473C204.647 35.1473 206.463 35.8456 207.58 37.3586L205.881 39.1742C204.973 38.0569 203.763 37.5914 202.738 37.5914C201.481 37.5914 200.806 38.3362 200.806 39.1742C200.806 39.7328 201.109 40.338 202.017 40.757C202.971 41.176 204.391 41.688 205.508 42.27C207.068 43.0614 207.976 44.2019 207.976 45.9011C207.976 48.3684 205.834 50.3702 202.599 50.3702C200.527 50.3702 198.362 49.4391 197.105 47.3675Z" fill="white"/>
<path d="M224.293 43.9688H213.05C213.446 46.0172 214.866 47.7396 217.822 47.7396C219.475 47.7396 221.43 47.0879 222.71 46.1801L223.944 48.3448C222.64 49.369 220.312 50.3466 217.729 50.3466C212.305 50.3466 210.001 46.5758 210.001 42.7817C210.001 38.4989 212.934 35.2634 217.356 35.2634C221.383 35.2634 224.409 37.9635 224.409 42.5257C224.409 43.1309 224.339 43.5731 224.293 43.9688ZM213.05 41.5714H221.43C221.197 39.267 219.498 37.8238 217.333 37.8238C215.099 37.8238 213.469 39.3368 213.05 41.5714Z" fill="white"/>
</svg>


export interface Question {
  question: string;
  A: string;
  B: string;
  C: string;
  D: string;
  Answer: string;
  Language: string;
  Level: string;
  Code: string;
}
export default function Home() {
  const [selectedLanguage, setSelectedLanguage] = useState(null);

  const LANGUAGE = {
    JavaScript : 'Javascript',
    Kotlin: 'Kotlin',
    Java: 'Java'
  };

  const onSelectLanguage = (language) => setSelectedLanguage(language);

  const getQuestionByLanguage = () : Question => {
    const filteredQuestions = data.filter(ques => ques['Language'] === selectedLanguage);
    return filteredQuestions[Math.floor(Math.random()*filteredQuestions.length)]
  }

  return (
    <div className="h-screen overflow-hidden">
      <div className="cursor-pointer absolute z-10 left-[40%] top-[2rem]" onClick={()=>window.location.reload()}>
        <TechnogiseLogo/>
      </div>
      {
        !selectedLanguage &&
        <div className="h-full flex flex-row items-center justify-around p-4">
          {
            Object.keys(LANGUAGE).map(language =>
              <button key={LANGUAGE[language]} className="btn-primary hover:bg-[#FFE500] hover:text-[#0f0f23] text-[#FFE500] border-[#FFE500] btn border-2 text-3xl font-bold p-6" onClick={() => onSelectLanguage(LANGUAGE[language])}>{language}</button>
            )
          }
        </div>
      }
      {
        selectedLanguage &&
        <div className="h-full">
          <Quiz question={getQuestionByLanguage()} />
        </div>
      }
    </div>
  )
}
